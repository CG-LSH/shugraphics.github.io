  Camera.cc
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Math.h(520,40): warning C4244: “参数”: 从“int64_t”转换到“long”，可能丢失数据
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(43,17): warning C4251: “openvdb::v9_0::Exception::mMessage”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::Exception”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  ClipBox.cc
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Math.h(520,40): warning C4244: “参数”: 从“int64_t”转换到“long”，可能丢失数据
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(43,17): warning C4251: “openvdb::v9_0::Exception::mMessage”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::Exception”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Font.cc
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Math.h(520,40): warning C4244: “参数”: 从“int64_t”转换到“long”，可能丢失数据
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(43,17): warning C4251: “openvdb::v9_0::Exception::mMessage”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::Exception”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  openvdb_view.cc
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Math.h(520,40): warning C4244: “参数”: 从“int64_t”转换到“long”，可能丢失数据
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(43,17): warning C4251: “openvdb::v9_0::Exception::mMessage”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::Exception”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(114,10): warning C4251: “openvdb::v9_0::UnknownMetadata::mTypeName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::UnknownMetadata”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(115,13): warning C4251: “openvdb::v9_0::UnknownMetadata::mBytes”: class“std::vector<uint8_t,std::allocator<uint8_t>>”需要有 dll 接口由 class“openvdb::v9_0::UnknownMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(95): message : 参见“std::vector<uint8_t,std::allocator<uint8_t>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(109,27): warning C4251: “openvdb::v9_0::io::StreamMetadata::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::StreamMetadata::Impl,std::default_delete<openvdb::v9_0::io::StreamMetadata::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::StreamMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(109): message : 参见“std::unique_ptr<openvdb::v9_0::io::StreamMetadata::Impl,std::default_delete<openvdb::v9_0::io::StreamMetadata::Impl>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(170,27): warning C4251: “openvdb::v9_0::io::MappedFile::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::MappedFile::Impl,std::default_delete<openvdb::v9_0::io::MappedFile::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::MappedFile”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(170): message : 参见“std::unique_ptr<openvdb::v9_0::io::MappedFile::Impl,std::default_delete<openvdb::v9_0::io::MappedFile::Impl>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(289,19): warning C4251: “openvdb::v9_0::math::MapRegistry::mMap”: class“std::map<openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory>>>”需要有 dll 接口由 class“openvdb::v9_0::math::MapRegistry”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(265): message : 参见“std::map<openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(651,12): warning C4251: “openvdb::v9_0::math::AffineMap::mMatrix”: class“openvdb::v9_0::math::Mat4<T>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(125): message : 参见“openvdb::v9_0::math::Mat4<T>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(654,12): warning C4251: “openvdb::v9_0::math::AffineMap::mMatrixInv”: class“openvdb::v9_0::math::Mat4<T>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(125): message : 参见“openvdb::v9_0::math::Mat4<T>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(655,12): warning C4251: “openvdb::v9_0::math::AffineMap::mJacobianInv”: class“openvdb::v9_0::math::Mat3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(848): message : 参见“openvdb::v9_0::math::Mat3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(657,12): warning C4251: “openvdb::v9_0::math::AffineMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,11): warning C4251: “openvdb::v9_0::math::ScaleMap::mScaleValues”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,25): warning C4251: “openvdb::v9_0::math::ScaleMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,37): warning C4251: “openvdb::v9_0::math::ScaleMap::mScaleValuesInverse”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,58): warning C4251: “openvdb::v9_0::math::ScaleMap::mInvScaleSqr”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,72): warning C4251: “openvdb::v9_0::math::ScaleMap::mInvTwiceScale”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1166,11): warning C4251: “openvdb::v9_0::math::TranslationMap::mTranslation”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::TranslationMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,11): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mTranslation”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,25): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mScaleValues”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,39): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,51): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mScaleValuesInverse”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1469,9): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mInvScaleSqr”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1469,23): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mInvTwiceScale”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(2586,13): warning C4251: “openvdb::v9_0::math::NonlinearFrustumMap::mBBox”: class“openvdb::v9_0::math::BBox<openvdb::v9_0::math::Vec3d>”需要有 dll 接口由 class“openvdb::v9_0::math::NonlinearFrustumMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(84): message : 参见“openvdb::v9_0::math::BBox<openvdb::v9_0::math::Vec3d>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Transform.h(157,18): warning C4251: “openvdb::v9_0::math::Transform::mMap”: class“std::shared_ptr<openvdb::v9_0::math::MapBase>”需要有 dll 接口由 class“openvdb::v9_0::math::Transform”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::math::MapBase>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\MetaMap.h(108,17): warning C4251: “openvdb::v9_0::MetaMap::mMeta”: class“std::map<openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr>>>”需要有 dll 接口由 class“openvdb::v9_0::MetaMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\MetaMap.h(25): message : 参见“std::map<openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(93,27): warning C4251: “openvdb::v9_0::io::DelayedLoadMetadata::mMask”: class“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::MaskType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::MaskType>>”需要有 dll 接口由 class“openvdb::v9_0::io::DelayedLoadMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(93): message : 参见“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::MaskType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::MaskType>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(94,37): warning C4251: “openvdb::v9_0::io::DelayedLoadMetadata::mCompressedSize”: class“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType>>”需要有 dll 接口由 class“openvdb::v9_0::io::DelayedLoadMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(94): message : 参见“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Grid.h(507,26): warning C4251: “openvdb::v9_0::GridBase::mTransform”: class“std::shared_ptr<openvdb::v9_0::math::Transform>”需要有 dll 接口由 class“openvdb::v9_0::GridBase”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::math::Transform>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Grid.h(540,10): warning C4251: “openvdb::v9_0::GridNamePred::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“openvdb::v9_0::GridNamePred”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\Archive.h(181,15): warning C4251: “openvdb::v9_0::io::Archive::mLibraryVersion”: struct“openvdb::v9_0::VersionId”需要有 dll 接口由 class“openvdb::v9_0::io::Archive”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\version.h(288): message : 参见“openvdb::v9_0::VersionId”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(84,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mGridName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(86,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mUniqueName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(88,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mInstanceParentName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(90,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mGridType”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\File.h(209,27): warning C4251: “openvdb::v9_0::io::File::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::File::Impl,std::default_delete<openvdb::v9_0::io::File::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::File”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\File.h(209): message : 参见“std::unique_ptr<openvdb::v9_0::io::File::Impl,std::default_delete<openvdb::v9_0::io::File::Impl>>”的声明
  TBB Warning: tbb/task.h is deprecated. For details, please see Deprecated Features appendix in the TBB reference manual.
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(159,27): warning C4251: “openvdb::v9_0::compression::Page::mInfo”: class“std::unique_ptr<openvdb::v9_0::compression::Page::Info,std::default_delete<openvdb::v9_0::compression::Page::Info>>”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(159): message : 参见“std::unique_ptr<openvdb::v9_0::compression::Page::Info,std::default_delete<openvdb::v9_0::compression::Page::Info>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(160,29): warning C4251: “openvdb::v9_0::compression::Page::mData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\PointIndexGrid.h(1761): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(161,21): warning C4251: “openvdb::v9_0::compression::Page::mMutex”: class“tbb::spin_mutex”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(39): message : 参见“tbb::spin_mutex”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(195,15): warning C4251: “openvdb::v9_0::compression::PageHandle::mPage”: class“std::shared_ptr<openvdb::v9_0::compression::Page>”需要有 dll 接口由 class“openvdb::v9_0::compression::PageHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(124): message : 参见“std::shared_ptr<openvdb::v9_0::compression::Page>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(233,15): warning C4251: “openvdb::v9_0::compression::PagedInputStream::mPage”: class“std::shared_ptr<openvdb::v9_0::compression::Page>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedInputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(124): message : 参见“std::shared_ptr<openvdb::v9_0::compression::Page>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(272,29): warning C4251: “openvdb::v9_0::compression::PagedOutputStream::mData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedOutputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\PointIndexGrid.h(1761): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(273,29): warning C4251: “openvdb::v9_0::compression::PagedOutputStream::mCompressedData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedOutputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\PointIndexGrid.h(1761): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(120,38): warning C4251: “openvdb::v9_0::points::AttributeArray::ScopedRegistryLock::lock”: class“tbb::spin_mutex::scoped_lock”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray::ScopedRegistryLock”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(53): message : 参见“tbb::spin_mutex::scoped_lock”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(387,29): warning C4251: “openvdb::v9_0::points::AttributeArray::mMutex”: class“tbb::spin_mutex”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(39): message : 参见“tbb::spin_mutex”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(390,26): warning C4251: “openvdb::v9_0::points::AttributeArray::mOutOfCore”: struct“std::atomic<unsigned int>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\atomic(2867): message : 参见“std::atomic<unsigned int>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(80,14): warning C4251: “openvdb::v9_0::points::StringMetaCache::mCache”: class“std::unordered_map<openvdb::v9_0::Name,openvdb::v9_0::Index,std::hash<openvdb::v9_0::Name>,std::equal_to<openvdb::v9_0::Name>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Index>>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringMetaCache”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(60): message : 参见“std::unordered_map<openvdb::v9_0::Name,openvdb::v9_0::Index,std::hash<openvdb::v9_0::Name>,std::equal_to<openvdb::v9_0::Name>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Index>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(115,20): warning C4251: “openvdb::v9_0::points::StringMetaInserter::mIdBlocks”: class“std::deque<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>,std::allocator<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringMetaInserter”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(112): message : 参见“std::deque<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>,std::allocator<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(178,51): warning C4251: “openvdb::v9_0::points::StringAttributeHandle::mHandle”: class“openvdb::v9_0::points::AttributeHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringAttributeHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(178): message : 参见“openvdb::v9_0::points::AttributeHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(235,57): warning C4251: “openvdb::v9_0::points::StringAttributeWriteHandle::mWriteHandle”: class“openvdb::v9_0::points::AttributeWriteHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringAttributeWriteHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(235): message : 参见“openvdb::v9_0::points::AttributeWriteHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(280,19): warning C4251: “openvdb::v9_0::points::AttributeSet::mDescr”: class“std::shared_ptr<openvdb::v9_0::points::AttributeSet::Descriptor>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(49): message : 参见“std::shared_ptr<openvdb::v9_0::points::AttributeSet::Descriptor>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(281,19): warning C4251: “openvdb::v9_0::points::AttributeSet::mAttrs”: class“std::vector<openvdb::v9_0::points::AttributeArray::Ptr,std::allocator<openvdb::v9_0::points::AttributeArray::Ptr>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(278): message : 参见“std::vector<openvdb::v9_0::points::AttributeArray::Ptr,std::allocator<openvdb::v9_0::points::AttributeArray::Ptr>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(521,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mNameMap”: class“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(66): message : 参见“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(522,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mTypes”: class“std::vector<openvdb::v9_0::NamePair,std::allocator<openvdb::v9_0::NamePair>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(522): message : 参见“std::vector<openvdb::v9_0::NamePair,std::allocator<openvdb::v9_0::NamePair>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(523,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mGroupMap”: class“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(66): message : 参见“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(528,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mFutureContainer”: class“openvdb::v9_0::points::future::Container”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(289): message : 参见“openvdb::v9_0::points::future::Container”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\LevelSetTracker.h(254,22): warning C4251: “openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::FloatGrid,openvdb::v9_0::util::NullInterrupter>::mState”: struct“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::FloatGrid,openvdb::v9_0::util::NullInterrupter>::State”需要有 dll 接口由 class“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::FloatGrid,openvdb::v9_0::util::NullInterrupter>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\LevelSetTracker.h(74): message : 参见“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::FloatGrid,openvdb::v9_0::util::NullInterrupter>::State”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\LevelSetTracker.h(690): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::FloatGrid,openvdb::v9_0::util::NullInterrupter>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\LevelSetTracker.h(254,22): warning C4251: “openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::DoubleGrid,openvdb::v9_0::util::NullInterrupter>::mState”: struct“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::DoubleGrid,openvdb::v9_0::util::NullInterrupter>::State”需要有 dll 接口由 class“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::DoubleGrid,openvdb::v9_0::util::NullInterrupter>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\LevelSetTracker.h(74): message : 参见“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::DoubleGrid,openvdb::v9_0::util::NullInterrupter>::State”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\LevelSetTracker.h(691): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::LevelSetTracker<openvdb::v9_0::DoubleGrid,openvdb::v9_0::util::NullInterrupter>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>”的客户端使用
          with
          [
              T=openvdb::v9_0::ValueMask
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=openvdb::v9_0::ValueMask
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1464): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>”的客户端使用
          with
          [
              T=bool
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=bool
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1465): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>”的客户端使用
          with
          [
              T=float
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=float
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1466): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1467): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>”的客户端使用
          with
          [
              T=int32_t
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=int32_t
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1468): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>”的客户端使用
          with
          [
              T=int64_t
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=int64_t
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1469): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>”的客户端使用
          with
          [
              T=openvdb::v9_0::Vec3f
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=openvdb::v9_0::Vec3f
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1470): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>”的客户端使用
          with
          [
              T=openvdb::v9_0::math::Vec3d
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=openvdb::v9_0::math::Vec3d
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1471): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(126,28): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>::mTreePtr”: class“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>”的客户端使用
          with
          [
              T=openvdb::v9_0::math::Vec3i
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::tree::Tree<openvdb::v9_0::tree::RootNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::InternalNode<openvdb::v9_0::tree::LeafNode<T,3>,4>,5>>>>”的声明
          with
          [
              T=openvdb::v9_0::math::Vec3i
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1472): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(128,13): warning C4251: “openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>::mMaskTree”: struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>::MaskPtr”需要有 dll 接口由 struct“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(123): message : 参见“openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>::MaskPtr”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::MaskTree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::MaskTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::MaskTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1474): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::MaskTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::BoolTree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::BoolTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::BoolTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1475): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::BoolTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::FloatTree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::FloatTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1476): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::FloatTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::DoubleTree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::DoubleTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1477): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::DoubleTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Int32Tree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Int32Tree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int32Tree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1478): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Int32Tree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Int64Tree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Int64Tree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Int64Tree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1479): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Int64Tree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3STree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3STree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3STree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1480): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3STree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3DTree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3DTree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3DTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1481): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3DTree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(374,45): warning C4251: “openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3ITree>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3ITree>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::Vec3ITree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1482): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::SumMergeOp<openvdb::v9_0::Vec3ITree>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(246,45): warning C4251: “openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::FloatTree,true>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::FloatTree,true>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1484): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::FloatTree,true>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(246,45): warning C4251: “openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::DoubleTree,true>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::DoubleTree,true>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1485): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::DoubleTree,true>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(246,45): warning C4251: “openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::FloatTree,false>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::FloatTree,false>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::FloatTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1487): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::FloatTree,false>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(246,45): warning C4251: “openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::DoubleTree,false>::mTreesToMerge”: class“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>>>”需要有 dll 接口由 struct“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::DoubleTree,false>”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(344): message : 参见“std::vector<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>,std::allocator<openvdb::v9_0::tools::TreeToMerge<openvdb::v9_0::DoubleTree>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\Merge.h(1488): message : 查看对正在编译的 类 模板 实例化“openvdb::v9_0::tools::CsgUnionOrIntersectionOp<openvdb::v9_0::DoubleTree,false>”的引用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\CGAL\boost\graph\Euler_operations.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\TriangleRemoveRepeat.cpp(45,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(195,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(197,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(387,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(388,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(389,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(697,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\PCL1.8.0\include\pcl-1.8\pcl\io\boost.h(81,1): warning C4005: “BOOST_PARAMETER_MAX_ARITY”: 宏重定义
D:\VCpkg\vcpkg-master\installed\x64-windows\include\CGAL\config.h(124): message : 参见“BOOST_PARAMETER_MAX_ARITY”的前一个定义
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(120,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(220,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(447,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(623,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(672,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(758,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(772,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(1123,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(1385,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(50,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(257,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(417,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(671,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(1482,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(45,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(133,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(177,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(256,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(268,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(604,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(865,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\update\quality.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(97,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(106,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(125,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(128,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(139,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(142,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(228,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(439,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(448,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(467,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(470,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(481,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(484,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(566,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(569,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(626,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(862,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(931,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SHFRemesh.cpp(69,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SHFRemesh.cpp(94,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SHFRemesh.cpp(96,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\openvdb_view.cc(79,12): warning C4101: “lpstrCustomFilter”: 未引用的局部变量
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\openvdb_view.cc(82,12): warning C4101: “lpstrFile”: 未引用的局部变量
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\openvdb_view.cc(80,11): warning C4101: “nMaxCustFilter”: 未引用的局部变量
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1954,1): warning C4267: “参数”: 从“size_t”转换到“vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::MarsenneTwisterURBG::result_type”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1934): message : 在编译 类 模板 成员函数“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”时
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(76): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”的引用
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(70): message : 查看对正在编译的 类 模板 实例化“vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>”的引用
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1971,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1980,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(2005,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(755,1): warning C4267: “参数”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(685): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Deserialize(OpenMeshType &,int &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(673): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Deserialize(OpenMeshType &,int &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(145): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(116): message : 在编译 类 模板 成员函数“int vcg::tri::io::Importer<MyMesh>::Open(OpenMeshType &,const char *,int &,vcg::CallBackPos (__cdecl *))”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(111): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::Importer<MyMesh>::Open(OpenMeshType &,const char *,int &,vcg::CallBackPos (__cdecl *))”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(49): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::Importer<MyMesh>”的引用
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(766,1): warning C4267: “参数”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(492,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(214): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(201): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(140): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterOBJ<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(667,1): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_stl.h(163,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_stl.h(153): message : 在编译 类 模板 成员函数“bool vcg::tri::io::ImporterSTL<OpenMeshType>::IsSTLMalformed(const char *,bool &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_stl.h(203): message : 查看对正在编译的函数 模板 实例化“bool vcg::tri::io::ImporterSTL<OpenMeshType>::IsSTLMalformed(const char *,bool &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(130): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterSTL<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(616,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(375): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterPLY<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::PlyInfo &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(367): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterPLY<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::PlyInfo &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(125): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterPLY<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(618,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(620,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(670,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(674,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(737,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(741,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(760,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(765,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(922,5): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(925,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(960,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(986,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(1010,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(1011,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(638,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(635): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read(void *,size_t,size_t)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(710): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read(void *,size_t,size_t)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(1063,1): warning C4267: “=”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(964): message : 在编译 类 模板 成员函数“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMaterials(const char *,std::vector<vcg::tri::io::Material,std::allocator<vcg::tri::io::Material>> &,std::vector<std::string,std::allocator<std::string>> &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(591): message : 查看对正在编译的函数 模板 实例化“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMaterials(const char *,std::vector<vcg::tri::io::Material,std::allocator<vcg::tri::io::Material>> &,std::vector<std::string,std::allocator<std::string>> &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(892,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(860): message : 在编译 类 模板 成员函数“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMask(const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(222): message : 查看对正在编译的函数 模板 实例化“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMask(const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(783,1): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(748): message : 在编译 类 模板 成员函数“void vcg::tri::io::ImporterOBJ<OpenMeshType>::TokenizeNextLine(std::ifstream &,std::vector<std::string,std::allocator<std::string>> &,std::string &,std::vector<vcg::Color4b,std::allocator<vcg::Color4b>> *)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(276): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::io::ImporterOBJ<OpenMeshType>::TokenizeNextLine(std::ifstream &,std::vector<std::string,std::allocator<std::string>> &,std::string &,std::vector<vcg::Color4b,std::allocator<vcg::Color4b>> *)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(632,112): warning C4267: “+=”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(632): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read_mem(void *,size_t,size_t)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(637): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read_mem(void *,size_t,size_t)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(632,134): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\io_fan_tessellator.h(61,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(479): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::io::FanTessellator<vcg::Point3<float>>(const std::vector<std::vector<vcg::Point3<float>,std::allocator<vcg::Point3<float>>>,std::allocator<std::vector<vcg::Point3<float>,std::allocator<vcg::Point3<float>>>>> &,std::vector<int,std::allocator<int>> &)”的引用
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(214): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(201): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\io_fan_tessellator.h(62,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(104,1): warning C4267: “return”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(104): message : 在编译 类 模板 成员函数“unsigned int vcg::VectorNBW<ATTR_TYPE>::size(void) const”时
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(193): message : 查看对正在编译的函数 模板 实例化“unsigned int vcg::VectorNBW<ATTR_TYPE>::size(void) const”的引用
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(129): message : 查看对正在编译的 类 模板 实例化“vcg::VectorNBW<ATTR_TYPE>”的引用
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\base.h(302): message : 查看对正在编译的 类 模板 实例化“vcg::SimpleTempData<CONT,ATTR_TYPE>”的引用
          with
          [
              CONT=std::vector<MyVertex,std::allocator<MyVertex>>,
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1968): message : 查看对正在编译的函数 模板 实例化“ATTR_TYPE &vcg::tri::TriMesh<std::vector<MyVertex,std::allocator<MyVertex>>,std::vector<MyFace,std::allocator<MyFace>>,std::vector<MyEdge,std::allocator<MyEdge>>,vcg::tri::DummyContainer,vcg::tri::DummyContainer>::AttributeHandle<ATTR_TYPE,std::vector<MyVertex,std::allocator<MyVertex>>>::operator []<MyVertex>(const RefType &)”的引用
          with
          [
              ATTR_TYPE=bool,
              RefType=MyVertex
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1968): message : 查看对正在编译的函数 模板 实例化“ATTR_TYPE &vcg::tri::TriMesh<std::vector<MyVertex,std::allocator<MyVertex>>,std::vector<MyFace,std::allocator<MyFace>>,std::vector<MyEdge,std::allocator<MyEdge>>,vcg::tri::DummyContainer,vcg::tri::DummyContainer>::AttributeHandle<ATTR_TYPE,std::vector<MyVertex,std::allocator<MyVertex>>>::operator []<MyVertex>(const RefType &)”的引用
          with
          [
              ATTR_TYPE=bool,
              RefType=MyVertex
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1934): message : 在编译 类 模板 成员函数“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”时
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(76): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”的引用
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(86,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(86): message : 在编译 类 模板 成员函数“void vcg::VectorNBW<ATTR_TYPE>::resize(size_t)”时
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(188): message : 查看对正在编译的函数 模板 实例化“void vcg::VectorNBW<ATTR_TYPE>::resize(size_t)”的引用
          with
          [
              ATTR_TYPE=bool
          ]
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(276,1): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(268): message : 在编译 类 模板 成员函数“void flann::lsh::LshTable<float>::optimize(void)”时
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(198): message : 查看对正在编译的函数 模板 实例化“void flann::lsh::LshTable<float>::optimize(void)”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\lsh_index.h(361): message : 查看对正在编译的 类 模板 实例化“flann::lsh::LshTable<float>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\lsh_index.h(352): message : 在编译 类 模板 成员函数“void flann::LshIndex<flann::DummyDistance>::buildIndexImpl(void)”时
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\all_indices.h(89): message : 查看对正在编译的 类 模板 实例化“flann::LshIndex<flann::DummyDistance>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\all_indices.h(119): message : 查看对正在编译的 类 模板 实例化“flann::needs_kdtree_distance<flann::LshIndex<flann::DummyDistance>>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\all_indices.h(183): message : 查看对正在编译的 类 模板 实例化“flann::valid_combination<flann::LshIndex,Distance,ElementType>”的引用
          with
          [
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\3rdParty\FLANN\include\flann\flann.hpp(113): message : 查看对正在编译的函数 模板 实例化“flann::NNIndex<Distance> *flann::create_index_by_type<Distance>(const flann::flann_algorithm_t,const flann::Matrix<float> &,const flann::IndexParams &,const Distance &)”的引用
          with
          [
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\3rdParty\FLANN\include\flann\flann.hpp(101): message : 在编译 类 模板 成员函数“flann::Index<Dist>::Index(const flann::Matrix<float> &,const flann::IndexParams &,Distance)”时
          with
          [
              Dist=flann::L2_Simple<float>,
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\kdtree\impl\kdtree_flann.hpp(123): message : 查看对正在编译的函数 模板 实例化“flann::Index<Dist>::Index(const flann::Matrix<float> &,const flann::IndexParams &,Distance)”的引用
          with
          [
              Dist=flann::L2_Simple<float>,
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\kdtree\impl\kdtree_flann.hpp(150): message : 查看对正在编译的 类 模板 实例化“flann::Index<Dist>”的引用
          with
          [
              Dist=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\kdtree\impl\kdtree_flann.hpp(135): message : 在编译 类 模板 成员函数“int pcl::KdTreeFLANN<pcl::PointXYZ,flann::L2_Simple<float>>::nearestKSearch(const PointT &,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &) const”时
          with
          [
              PointT=pcl::PointXYZ
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\TriangleRemoveRepeat.cpp(109): message : 查看对正在编译的函数 模板 实例化“int pcl::KdTreeFLANN<pcl::PointXYZ,flann::L2_Simple<float>>::nearestKSearch(const PointT &,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &) const”的引用
          with
          [
              PointT=pcl::PointXYZ
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\TriangleRemoveRepeat.cpp(29): message : 查看对正在编译的 类 模板 实例化“pcl::KdTreeFLANN<pcl::PointXYZ,flann::L2_Simple<float>>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(287,1): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(289,1): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(592,1): warning C4267: “参数”: 从“size_t”转换到“A2”，可能丢失数据
          with
          [
              A2=int
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<int>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              F=boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<int>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              F=boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>::operator ()<const pcl::PointCloud<PointT>&,T,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<float>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=size_t,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>::operator ()<const pcl::PointCloud<PointT>&,T,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<float>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=size_t,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(132): message : 在编译 类 模板 成员函数“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”时
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的函数 模板 实例化“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”的引用
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的 类 模板 实例化“boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>”的引用
          with
          [
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>,
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1071): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf5<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1070): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf5<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(160): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(160): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(94): message : 在编译 类 模板 成员函数“bool pcl::Feature<PointInT,PointOutT>::initCompute(void)”时
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(191): message : 查看对正在编译的函数 模板 实例化“bool pcl::Feature<PointInT,PointOutT>::initCompute(void)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\normal_3d.h(200): message : 查看对正在编译的 类 模板 实例化“pcl::Feature<PointInT,PointOutT>”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\normal_3d_omp.h(55): message : 查看对正在编译的 类 模板 实例化“pcl::NormalEstimation<PointInT,PointOutT>”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Normal_Generate.hpp(40): message : 查看对正在编译的 类 模板 实例化“pcl::NormalEstimationOMP<pcl::PointXYZ,pcl::Normal>”的引用
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(666,1): warning C4267: “参数”: 从“size_t”转换到“A2”，可能丢失数据
          with
          [
              A2=int
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<T>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              T=int,
              F=boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<T>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              T=int,
              F=boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>::operator ()<const pcl::PointCloud<PointT>&,unsigned __int64,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<float>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>::operator ()<const pcl::PointCloud<PointT>&,unsigned __int64,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<float>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(132): message : 在编译 类 模板 成员函数“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”时
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的函数 模板 实例化“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”的引用
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的 类 模板 实例化“boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>”的引用
          with
          [
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>,
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1071): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf6<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1070): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf6<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<float>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(149): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(149): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<float>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
  plylib.cpp
  AdpIsotropic.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
  TBB Warning: tbb/task.h is deprecated. For details, please see Deprecated Features appendix in the TBB reference manual.
  AdpIsotropic_Cuda.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  AdpIsotropic_OM.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  Isotropic.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  Mesh_Geometric.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  SHFRemesh.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
  TBB Warning: tbb/task.h is deprecated. For details, please see Deprecated Features appendix in the TBB reference manual.
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\update\quality.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(422,18): warning C4834: 放弃具有 "nodiscard" 属性的函数的返回值
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(214): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(201): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(140): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterOBJ<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(116): message : 在编译 类 模板 成员函数“int vcg::tri::io::Importer<MyMesh>::Open(OpenMeshType &,const char *,int &,vcg::CallBackPos (__cdecl *))”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(111): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::Importer<MyMesh>::Open(OpenMeshType &,const char *,int &,vcg::CallBackPos (__cdecl *))”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(49): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::Importer<MyMesh>”的引用
  SubRemeshing.cpp
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(195,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(197,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(225,17): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(387,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(388,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(389,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(433,21): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(443,22): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(454,20): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(697,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  TriangleCheck.cpp
  TriangleRemoveRepeat.cpp
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  RenderModules.cc
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Math.h(520,40): warning C4244: “参数”: 从“int64_t”转换到“long”，可能丢失数据
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(43,17): warning C4251: “openvdb::v9_0::Exception::mMessage”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::Exception”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(114,10): warning C4251: “openvdb::v9_0::UnknownMetadata::mTypeName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::UnknownMetadata”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(115,13): warning C4251: “openvdb::v9_0::UnknownMetadata::mBytes”: class“std::vector<uint8_t,std::allocator<uint8_t>>”需要有 dll 接口由 class“openvdb::v9_0::UnknownMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(95): message : 参见“std::vector<uint8_t,std::allocator<uint8_t>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(109,27): warning C4251: “openvdb::v9_0::io::StreamMetadata::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::StreamMetadata::Impl,std::default_delete<openvdb::v9_0::io::StreamMetadata::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::StreamMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(109): message : 参见“std::unique_ptr<openvdb::v9_0::io::StreamMetadata::Impl,std::default_delete<openvdb::v9_0::io::StreamMetadata::Impl>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(170,27): warning C4251: “openvdb::v9_0::io::MappedFile::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::MappedFile::Impl,std::default_delete<openvdb::v9_0::io::MappedFile::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::MappedFile”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(170): message : 参见“std::unique_ptr<openvdb::v9_0::io::MappedFile::Impl,std::default_delete<openvdb::v9_0::io::MappedFile::Impl>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(289,19): warning C4251: “openvdb::v9_0::math::MapRegistry::mMap”: class“std::map<openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory>>>”需要有 dll 接口由 class“openvdb::v9_0::math::MapRegistry”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(265): message : 参见“std::map<openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(651,12): warning C4251: “openvdb::v9_0::math::AffineMap::mMatrix”: class“openvdb::v9_0::math::Mat4<T>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(125): message : 参见“openvdb::v9_0::math::Mat4<T>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(654,12): warning C4251: “openvdb::v9_0::math::AffineMap::mMatrixInv”: class“openvdb::v9_0::math::Mat4<T>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(125): message : 参见“openvdb::v9_0::math::Mat4<T>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(655,12): warning C4251: “openvdb::v9_0::math::AffineMap::mJacobianInv”: class“openvdb::v9_0::math::Mat3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(848): message : 参见“openvdb::v9_0::math::Mat3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(657,12): warning C4251: “openvdb::v9_0::math::AffineMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,11): warning C4251: “openvdb::v9_0::math::ScaleMap::mScaleValues”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,25): warning C4251: “openvdb::v9_0::math::ScaleMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,37): warning C4251: “openvdb::v9_0::math::ScaleMap::mScaleValuesInverse”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,58): warning C4251: “openvdb::v9_0::math::ScaleMap::mInvScaleSqr”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,72): warning C4251: “openvdb::v9_0::math::ScaleMap::mInvTwiceScale”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1166,11): warning C4251: “openvdb::v9_0::math::TranslationMap::mTranslation”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::TranslationMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,11): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mTranslation”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,25): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mScaleValues”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,39): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,51): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mScaleValuesInverse”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1469,9): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mInvScaleSqr”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1469,23): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mInvTwiceScale”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(2586,13): warning C4251: “openvdb::v9_0::math::NonlinearFrustumMap::mBBox”: class“openvdb::v9_0::math::BBox<openvdb::v9_0::math::Vec3d>”需要有 dll 接口由 class“openvdb::v9_0::math::NonlinearFrustumMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(84): message : 参见“openvdb::v9_0::math::BBox<openvdb::v9_0::math::Vec3d>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Transform.h(157,18): warning C4251: “openvdb::v9_0::math::Transform::mMap”: class“std::shared_ptr<openvdb::v9_0::math::MapBase>”需要有 dll 接口由 class“openvdb::v9_0::math::Transform”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::math::MapBase>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\MetaMap.h(108,17): warning C4251: “openvdb::v9_0::MetaMap::mMeta”: class“std::map<openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr>>>”需要有 dll 接口由 class“openvdb::v9_0::MetaMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\MetaMap.h(25): message : 参见“std::map<openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(93,27): warning C4251: “openvdb::v9_0::io::DelayedLoadMetadata::mMask”: class“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::MaskType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::MaskType>>”需要有 dll 接口由 class“openvdb::v9_0::io::DelayedLoadMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(93): message : 参见“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::MaskType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::MaskType>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(94,37): warning C4251: “openvdb::v9_0::io::DelayedLoadMetadata::mCompressedSize”: class“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType>>”需要有 dll 接口由 class“openvdb::v9_0::io::DelayedLoadMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(94): message : 参见“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Grid.h(507,26): warning C4251: “openvdb::v9_0::GridBase::mTransform”: class“std::shared_ptr<openvdb::v9_0::math::Transform>”需要有 dll 接口由 class“openvdb::v9_0::GridBase”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::math::Transform>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Grid.h(540,10): warning C4251: “openvdb::v9_0::GridNamePred::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“openvdb::v9_0::GridNamePred”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\Archive.h(181,15): warning C4251: “openvdb::v9_0::io::Archive::mLibraryVersion”: struct“openvdb::v9_0::VersionId”需要有 dll 接口由 class“openvdb::v9_0::io::Archive”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\version.h(288): message : 参见“openvdb::v9_0::VersionId”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(84,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mGridName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(86,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mUniqueName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(88,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mInstanceParentName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(90,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mGridType”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\File.h(209,27): warning C4251: “openvdb::v9_0::io::File::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::File::Impl,std::default_delete<openvdb::v9_0::io::File::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::File”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\File.h(209): message : 参见“std::unique_ptr<openvdb::v9_0::io::File::Impl,std::default_delete<openvdb::v9_0::io::File::Impl>>”的声明
  TBB Warning: tbb/task.h is deprecated. For details, please see Deprecated Features appendix in the TBB reference manual.
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(159,27): warning C4251: “openvdb::v9_0::compression::Page::mInfo”: class“std::unique_ptr<openvdb::v9_0::compression::Page::Info,std::default_delete<openvdb::v9_0::compression::Page::Info>>”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(159): message : 参见“std::unique_ptr<openvdb::v9_0::compression::Page::Info,std::default_delete<openvdb::v9_0::compression::Page::Info>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(160,29): warning C4251: “openvdb::v9_0::compression::Page::mData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\VolumeToMesh.h(145): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(161,21): warning C4251: “openvdb::v9_0::compression::Page::mMutex”: class“tbb::spin_mutex”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(39): message : 参见“tbb::spin_mutex”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(195,15): warning C4251: “openvdb::v9_0::compression::PageHandle::mPage”: class“std::shared_ptr<openvdb::v9_0::compression::Page>”需要有 dll 接口由 class“openvdb::v9_0::compression::PageHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(124): message : 参见“std::shared_ptr<openvdb::v9_0::compression::Page>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(233,15): warning C4251: “openvdb::v9_0::compression::PagedInputStream::mPage”: class“std::shared_ptr<openvdb::v9_0::compression::Page>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedInputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(124): message : 参见“std::shared_ptr<openvdb::v9_0::compression::Page>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(272,29): warning C4251: “openvdb::v9_0::compression::PagedOutputStream::mData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedOutputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\VolumeToMesh.h(145): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(273,29): warning C4251: “openvdb::v9_0::compression::PagedOutputStream::mCompressedData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedOutputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\VolumeToMesh.h(145): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(120,38): warning C4251: “openvdb::v9_0::points::AttributeArray::ScopedRegistryLock::lock”: class“tbb::spin_mutex::scoped_lock”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray::ScopedRegistryLock”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(53): message : 参见“tbb::spin_mutex::scoped_lock”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(387,29): warning C4251: “openvdb::v9_0::points::AttributeArray::mMutex”: class“tbb::spin_mutex”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(39): message : 参见“tbb::spin_mutex”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(390,26): warning C4251: “openvdb::v9_0::points::AttributeArray::mOutOfCore”: struct“std::atomic<unsigned int>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\atomic(2867): message : 参见“std::atomic<unsigned int>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(80,14): warning C4251: “openvdb::v9_0::points::StringMetaCache::mCache”: class“std::unordered_map<openvdb::v9_0::Name,openvdb::v9_0::Index,std::hash<openvdb::v9_0::Name>,std::equal_to<openvdb::v9_0::Name>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Index>>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringMetaCache”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(60): message : 参见“std::unordered_map<openvdb::v9_0::Name,openvdb::v9_0::Index,std::hash<openvdb::v9_0::Name>,std::equal_to<openvdb::v9_0::Name>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Index>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(115,20): warning C4251: “openvdb::v9_0::points::StringMetaInserter::mIdBlocks”: class“std::deque<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>,std::allocator<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringMetaInserter”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(112): message : 参见“std::deque<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>,std::allocator<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(178,51): warning C4251: “openvdb::v9_0::points::StringAttributeHandle::mHandle”: class“openvdb::v9_0::points::AttributeHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringAttributeHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(178): message : 参见“openvdb::v9_0::points::AttributeHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(235,57): warning C4251: “openvdb::v9_0::points::StringAttributeWriteHandle::mWriteHandle”: class“openvdb::v9_0::points::AttributeWriteHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringAttributeWriteHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(235): message : 参见“openvdb::v9_0::points::AttributeWriteHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(280,19): warning C4251: “openvdb::v9_0::points::AttributeSet::mDescr”: class“std::shared_ptr<openvdb::v9_0::points::AttributeSet::Descriptor>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(49): message : 参见“std::shared_ptr<openvdb::v9_0::points::AttributeSet::Descriptor>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(281,19): warning C4251: “openvdb::v9_0::points::AttributeSet::mAttrs”: class“std::vector<openvdb::v9_0::points::AttributeArray::Ptr,std::allocator<openvdb::v9_0::points::AttributeArray::Ptr>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(278): message : 参见“std::vector<openvdb::v9_0::points::AttributeArray::Ptr,std::allocator<openvdb::v9_0::points::AttributeArray::Ptr>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(521,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mNameMap”: class“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(66): message : 参见“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(522,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mTypes”: class“std::vector<openvdb::v9_0::NamePair,std::allocator<openvdb::v9_0::NamePair>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(522): message : 参见“std::vector<openvdb::v9_0::NamePair,std::allocator<openvdb::v9_0::NamePair>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(523,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mGroupMap”: class“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(66): message : 参见“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(528,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mFutureContainer”: class“openvdb::v9_0::points::future::Container”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(289): message : 参见“openvdb::v9_0::points::future::Container”的声明
D:\PCL1.8.0\include\pcl-1.8\pcl\point_traits.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\TriangleRemoveRepeat.cpp(45,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(195,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(197,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(387,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(388,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(389,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SubRemeshing.cpp(697,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(120,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(220,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(447,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(623,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(672,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(758,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(772,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(1123,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic.cpp(1385,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(50,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(257,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(417,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(671,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\AdpIsotropic_OM.cpp(1482,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(45,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(133,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(177,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(256,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(268,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(604,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\Isotropic.cpp(865,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\update\quality.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(97,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(106,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(125,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(128,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(139,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(142,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(228,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(439,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(448,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(467,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(470,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(481,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(484,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(566,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(569,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(626,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(862,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\geodesic.hpp(931,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SHFRemesh.cpp(69,1): warning C4267: “=”: 从“size_t”转换到“uint32_t”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SHFRemesh.cpp(94,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\SHFRemesh.cpp(96,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1954,1): warning C4267: “参数”: 从“size_t”转换到“vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::MarsenneTwisterURBG::result_type”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1934): message : 在编译 类 模板 成员函数“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”时
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(76): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”的引用
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(70): message : 查看对正在编译的 类 模板 实例化“vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>”的引用
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1971,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1980,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(2005,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(755,1): warning C4267: “参数”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(685): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Deserialize(OpenMeshType &,int &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(673): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Deserialize(OpenMeshType &,int &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(145): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(116): message : 在编译 类 模板 成员函数“int vcg::tri::io::Importer<MyMesh>::Open(OpenMeshType &,const char *,int &,vcg::CallBackPos (__cdecl *))”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(111): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::Importer<MyMesh>::Open(OpenMeshType &,const char *,int &,vcg::CallBackPos (__cdecl *))”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(49): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::Importer<MyMesh>”的引用
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(766,1): warning C4267: “参数”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(422,18): warning C4834: 放弃具有 "nodiscard" 属性的函数的返回值
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(214): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(201): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(140): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterOBJ<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(492,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(667,1): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_stl.h(163,1): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_stl.h(153): message : 在编译 类 模板 成员函数“bool vcg::tri::io::ImporterSTL<OpenMeshType>::IsSTLMalformed(const char *,bool &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_stl.h(203): message : 查看对正在编译的函数 模板 实例化“bool vcg::tri::io::ImporterSTL<OpenMeshType>::IsSTLMalformed(const char *,bool &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(130): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterSTL<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(616,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(375): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterPLY<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::PlyInfo &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(367): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterPLY<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::PlyInfo &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import.h(125): message : 查看对正在编译的 类 模板 实例化“vcg::tri::io::ImporterPLY<OpenMeshType>”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(618,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(620,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(670,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(674,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(737,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(741,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(760,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(765,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(922,5): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(925,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(960,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(986,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(1010,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_ply.h(1011,1): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(638,1): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(635): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read(void *,size_t,size_t)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(710): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read(void *,size_t,size_t)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(1063,1): warning C4267: “=”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(964): message : 在编译 类 模板 成员函数“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMaterials(const char *,std::vector<vcg::tri::io::Material,std::allocator<vcg::tri::io::Material>> &,std::vector<std::string,std::allocator<std::string>> &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(591): message : 查看对正在编译的函数 模板 实例化“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMaterials(const char *,std::vector<vcg::tri::io::Material,std::allocator<vcg::tri::io::Material>> &,std::vector<std::string,std::allocator<std::string>> &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(892,1): warning C4267: “+=”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(860): message : 在编译 类 模板 成员函数“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMask(const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(222): message : 查看对正在编译的函数 模板 实例化“bool vcg::tri::io::ImporterOBJ<OpenMeshType>::LoadMask(const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(783,1): warning C4267: “参数”: 从“size_t”转换到“const int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(748): message : 在编译 类 模板 成员函数“void vcg::tri::io::ImporterOBJ<OpenMeshType>::TokenizeNextLine(std::ifstream &,std::vector<std::string,std::allocator<std::string>> &,std::string &,std::vector<vcg::Color4b,std::allocator<vcg::Color4b>> *)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(276): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::io::ImporterOBJ<OpenMeshType>::TokenizeNextLine(std::ifstream &,std::vector<std::string,std::allocator<std::string>> &,std::string &,std::vector<vcg::Color4b,std::allocator<vcg::Color4b>> *)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(632,112): warning C4267: “+=”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(632): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read_mem(void *,size_t,size_t)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(637): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterVMI<OpenMeshType,long,double,int,short,char>::Read_mem(void *,size_t,size_t)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_vmi.h(632,134): warning C4267: “return”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\io_fan_tessellator.h(61,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(479): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::io::FanTessellator<vcg::Point3<float>>(const std::vector<std::vector<vcg::Point3<float>,std::allocator<vcg::Point3<float>>>,std::allocator<std::vector<vcg::Point3<float>,std::allocator<vcg::Point3<float>>>>> &,std::vector<int,std::allocator<int>> &)”的引用
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(214): message : 在编译 类 模板 成员函数“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”时
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\import_obj.h(201): message : 查看对正在编译的函数 模板 实例化“int vcg::tri::io::ImporterOBJ<OpenMeshType>::Open(OpenMeshType &,const char *,vcg::tri::io::ImporterOBJ<OpenMeshType>::Info &)”的引用
          with
          [
              OpenMeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\wrap\io_trimesh\io_fan_tessellator.h(62,1): warning C4267: “参数”: 从“size_t”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(104,1): warning C4267: “return”: 从“size_t”转换到“unsigned int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(104): message : 在编译 类 模板 成员函数“unsigned int vcg::VectorNBW<ATTR_TYPE>::size(void) const”时
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(193): message : 查看对正在编译的函数 模板 实例化“unsigned int vcg::VectorNBW<ATTR_TYPE>::size(void) const”的引用
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(129): message : 查看对正在编译的 类 模板 实例化“vcg::VectorNBW<ATTR_TYPE>”的引用
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\base.h(302): message : 查看对正在编译的 类 模板 实例化“vcg::SimpleTempData<CONT,ATTR_TYPE>”的引用
          with
          [
              CONT=std::vector<MyVertex,std::allocator<MyVertex>>,
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1968): message : 查看对正在编译的函数 模板 实例化“ATTR_TYPE &vcg::tri::TriMesh<std::vector<MyVertex,std::allocator<MyVertex>>,std::vector<MyFace,std::allocator<MyFace>>,std::vector<MyEdge,std::allocator<MyEdge>>,vcg::tri::DummyContainer,vcg::tri::DummyContainer>::AttributeHandle<ATTR_TYPE,std::vector<MyVertex,std::allocator<MyVertex>>>::operator []<MyVertex>(const RefType &)”的引用
          with
          [
              ATTR_TYPE=bool,
              RefType=MyVertex
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1968): message : 查看对正在编译的函数 模板 实例化“ATTR_TYPE &vcg::tri::TriMesh<std::vector<MyVertex,std::allocator<MyVertex>>,std::vector<MyFace,std::allocator<MyFace>>,std::vector<MyEdge,std::allocator<MyEdge>>,vcg::tri::DummyContainer,vcg::tri::DummyContainer>::AttributeHandle<ATTR_TYPE,std::vector<MyVertex,std::allocator<MyVertex>>>::operator []<MyVertex>(const RefType &)”的引用
          with
          [
              ATTR_TYPE=bool,
              RefType=MyVertex
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\complex\algorithms\point_sampling.h(1934): message : 在编译 类 模板 成员函数“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”时
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Load_Resampling.hpp(76): message : 查看对正在编译的函数 模板 实例化“void vcg::tri::SurfaceSampling<MyMesh,vcg::tri::MeshSampler<MyMesh>>::PoissonDiskPruning(VertexSampler &,MeshType &,float,vcg::tri::SurfaceSampling<MeshType,VertexSampler>::PoissonDiskParam &)”的引用
          with
          [
              VertexSampler=vcg::tri::MeshSampler<MyMesh>,
              MeshType=MyMesh
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(86,1): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(86): message : 在编译 类 模板 成员函数“void vcg::VectorNBW<ATTR_TYPE>::resize(size_t)”时
          with
          [
              ATTR_TYPE=bool
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\VCG\vcg\container\simple_temporary_data.h(188): message : 查看对正在编译的函数 模板 实例化“void vcg::VectorNBW<ATTR_TYPE>::resize(size_t)”的引用
          with
          [
              ATTR_TYPE=bool
          ]
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(276,1): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(268): message : 在编译 类 模板 成员函数“void flann::lsh::LshTable<float>::optimize(void)”时
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(198): message : 查看对正在编译的函数 模板 实例化“void flann::lsh::LshTable<float>::optimize(void)”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\lsh_index.h(361): message : 查看对正在编译的 类 模板 实例化“flann::lsh::LshTable<float>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\lsh_index.h(352): message : 在编译 类 模板 成员函数“void flann::LshIndex<flann::DummyDistance>::buildIndexImpl(void)”时
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\all_indices.h(89): message : 查看对正在编译的 类 模板 实例化“flann::LshIndex<flann::DummyDistance>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\all_indices.h(119): message : 查看对正在编译的 类 模板 实例化“flann::needs_kdtree_distance<flann::LshIndex<flann::DummyDistance>>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\algorithms\all_indices.h(183): message : 查看对正在编译的 类 模板 实例化“flann::valid_combination<flann::LshIndex,Distance,ElementType>”的引用
          with
          [
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\3rdParty\FLANN\include\flann\flann.hpp(113): message : 查看对正在编译的函数 模板 实例化“flann::NNIndex<Distance> *flann::create_index_by_type<Distance>(const flann::flann_algorithm_t,const flann::Matrix<float> &,const flann::IndexParams &,const Distance &)”的引用
          with
          [
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\3rdParty\FLANN\include\flann\flann.hpp(101): message : 在编译 类 模板 成员函数“flann::Index<Dist>::Index(const flann::Matrix<float> &,const flann::IndexParams &,Distance)”时
          with
          [
              Dist=flann::L2_Simple<float>,
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\kdtree\impl\kdtree_flann.hpp(123): message : 查看对正在编译的函数 模板 实例化“flann::Index<Dist>::Index(const flann::Matrix<float> &,const flann::IndexParams &,Distance)”的引用
          with
          [
              Dist=flann::L2_Simple<float>,
              Distance=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\kdtree\impl\kdtree_flann.hpp(150): message : 查看对正在编译的 类 模板 实例化“flann::Index<Dist>”的引用
          with
          [
              Dist=flann::L2_Simple<float>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\kdtree\impl\kdtree_flann.hpp(135): message : 在编译 类 模板 成员函数“int pcl::KdTreeFLANN<pcl::PointXYZ,flann::L2_Simple<float>>::nearestKSearch(const PointT &,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &) const”时
          with
          [
              PointT=pcl::PointXYZ
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\TriangleRemoveRepeat.cpp(109): message : 查看对正在编译的函数 模板 实例化“int pcl::KdTreeFLANN<pcl::PointXYZ,flann::L2_Simple<float>>::nearestKSearch(const PointT &,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &) const”的引用
          with
          [
              PointT=pcl::PointXYZ
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Remeshing\TriangleRemoveRepeat.cpp(29): message : 查看对正在编译的 类 模板 实例化“pcl::KdTreeFLANN<pcl::PointXYZ,flann::L2_Simple<float>>”的引用
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(287,1): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
D:\PCL1.8.0\3rdParty\FLANN\include\flann\util\lsh_table.h(289,1): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(592,1): warning C4267: “参数”: 从“size_t”转换到“A2”，可能丢失数据
          with
          [
              A2=int
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<int>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              F=boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<int>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              F=boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>::operator ()<const pcl::PointCloud<PointT>&,T,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<GLfloat>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=size_t,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>::operator ()<const pcl::PointCloud<PointT>&,T,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<GLfloat>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=size_t,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(132): message : 在编译 类 模板 成员函数“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”时
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的函数 模板 实例化“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”的引用
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的 类 模板 实例化“boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>”的引用
          with
          [
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>,
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1071): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf5<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1070): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf5<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(160): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(160): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf5<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,int,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>,boost::_bi::list6<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(94): message : 在编译 类 模板 成员函数“bool pcl::Feature<PointInT,PointOutT>::initCompute(void)”时
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(191): message : 查看对正在编译的函数 模板 实例化“bool pcl::Feature<PointInT,PointOutT>::initCompute(void)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\normal_3d.h(200): message : 查看对正在编译的 类 模板 实例化“pcl::Feature<PointInT,PointOutT>”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\normal_3d_omp.h(55): message : 查看对正在编译的 类 模板 实例化“pcl::NormalEstimation<PointInT,PointOutT>”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointOutT=pcl::Normal
          ]
D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\Normal_Generate.hpp(40): message : 查看对正在编译的 类 模板 实例化“pcl::NormalEstimationOMP<pcl::PointXYZ,pcl::Normal>”的引用
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(666,1): warning C4267: “参数”: 从“size_t”转换到“A2”，可能丢失数据
          with
          [
              A2=int
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<T>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              T=int,
              F=boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\bind\bind.hpp(1354): message : 查看对正在编译的函数 模板 实例化“R boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointInT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>::operator ()<int,F,boost::_bi::rrlist5<A1,A2,A3,A4,A5>>(boost::_bi::type<T>,F &,A &,long)”的引用
          with
          [
              R=int,
              PointInT=pcl::PointXYZ,
              T=int,
              F=boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &,
              A=boost::_bi::rrlist5<const pcl::PointCloud<pcl::PointXYZ> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>::operator ()<const pcl::PointCloud<PointT>&,unsigned __int64,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<GLfloat>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(138): message : 查看对正在编译的函数 模板 实例化“int boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>::operator ()<const pcl::PointCloud<PointT>&,unsigned __int64,double,std::vector<int,std::allocator<int>>&,std::vector<GLfloat,std::allocator<GLfloat>>&>(A1,A2 &&,A3 &&,A4,A5)”的引用
          with
          [
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              A1=const pcl::PointCloud<pcl::PointXYZ> &,
              A2=size_t,
              A3=double,
              A4=std::vector<int,std::allocator<int>> &,
              A5=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(132): message : 在编译 类 模板 成员函数“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”时
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的函数 模板 实例化“R boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>::invoke(boost::detail::function::function_buffer &,T0,T1,T2,T3,T4)”的引用
          with
          [
              R=int,
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(934): message : 查看对正在编译的 类 模板 实例化“boost::detail::function::function_obj_invoker5<FunctionObj,R,T0,T1,T2,T3,T4>”的引用
          with
          [
              FunctionObj=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>,
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(725): message : 查看对正在编译的函数 模板 实例化“void boost::function5<R,T0,T1,T2,T3,T4>::assign_to<Functor>(Functor)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1071): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf6<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1070): message : 查看对正在编译的函数 模板 实例化“boost::function5<R,T0,T1,T2,T3,T4>::function5<boost::_bi::bind_t<R,boost::_mfi::cmf6<R,pcl::search::Search<PointInT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              R=int,
              T0=const pcl::PointCloud<pcl::PointXYZ> &,
              T1=size_t,
              T2=double,
              T3=std::vector<int,std::allocator<int>> &,
              T4=std::vector<GLfloat,std::allocator<GLfloat>> &,
              PointInT=pcl::PointXYZ,
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\3rdParty\Boost\include\boost_1_67_0\boost\function\function_template.hpp(1123): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::function<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor,int)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(149): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
D:\PCL1.8.0\include\pcl-1.8\pcl\features\impl\feature.hpp(149): message : 查看对正在编译的函数 模板 实例化“boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)> &boost::function<int (const pcl::PointCloud<PointT> &,size_t,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &)>::operator =<boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<PointT>,const pcl::PointCloud<PointT> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<PointT>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<T>>>>(Functor)”的引用
          with
          [
              PointT=pcl::PointXYZ,
              T=int,
              Functor=boost::_bi::bind_t<int,boost::_mfi::cmf6<int,pcl::search::Search<pcl::PointXYZ>,const pcl::PointCloud<pcl::PointXYZ> &,int,double,std::vector<int,std::allocator<int>> &,std::vector<GLfloat,std::allocator<GLfloat>> &,unsigned int>,boost::_bi::list7<boost::reference_wrapper<boost::shared_ptr<pcl::search::Search<pcl::PointXYZ>>>,boost::arg<1>,boost::arg<2>,boost::arg<3>,boost::arg<4>,boost::arg<5>,boost::_bi::value<int>>>
          ]
  Viewer.cc
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Math.h(520,40): warning C4244: “参数”: 从“int64_t”转换到“long”，可能丢失数据
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(18,1): warning C4275: 非 dll 接口 class“std::exception”用作 dll 接口 class“openvdb::v9_0::Exception”的基
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h(48): message : 参见“std::exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(17): message : 参见“openvdb::v9_0::Exception”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Exceptions.h(43,17): warning C4251: “openvdb::v9_0::Exception::mMessage”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::Exception”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(114,10): warning C4251: “openvdb::v9_0::UnknownMetadata::mTypeName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::UnknownMetadata”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(115,13): warning C4251: “openvdb::v9_0::UnknownMetadata::mBytes”: class“std::vector<uint8_t,std::allocator<uint8_t>>”需要有 dll 接口由 class“openvdb::v9_0::UnknownMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Metadata.h(95): message : 参见“std::vector<uint8_t,std::allocator<uint8_t>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(109,27): warning C4251: “openvdb::v9_0::io::StreamMetadata::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::StreamMetadata::Impl,std::default_delete<openvdb::v9_0::io::StreamMetadata::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::StreamMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(109): message : 参见“std::unique_ptr<openvdb::v9_0::io::StreamMetadata::Impl,std::default_delete<openvdb::v9_0::io::StreamMetadata::Impl>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(170,27): warning C4251: “openvdb::v9_0::io::MappedFile::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::MappedFile::Impl,std::default_delete<openvdb::v9_0::io::MappedFile::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::MappedFile”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\io.h(170): message : 参见“std::unique_ptr<openvdb::v9_0::io::MappedFile::Impl,std::default_delete<openvdb::v9_0::io::MappedFile::Impl>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(289,19): warning C4251: “openvdb::v9_0::math::MapRegistry::mMap”: class“std::map<openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory>>>”需要有 dll 接口由 class“openvdb::v9_0::math::MapRegistry”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(265): message : 参见“std::map<openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::math::MapBase::MapFactory>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(651,12): warning C4251: “openvdb::v9_0::math::AffineMap::mMatrix”: class“openvdb::v9_0::math::Mat4<T>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(125): message : 参见“openvdb::v9_0::math::Mat4<T>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(654,12): warning C4251: “openvdb::v9_0::math::AffineMap::mMatrixInv”: class“openvdb::v9_0::math::Mat4<T>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(125): message : 参见“openvdb::v9_0::math::Mat4<T>”的声明
          with
          [
              T=double
          ]
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(655,12): warning C4251: “openvdb::v9_0::math::AffineMap::mJacobianInv”: class“openvdb::v9_0::math::Mat3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Mat3.h(848): message : 参见“openvdb::v9_0::math::Mat3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(657,12): warning C4251: “openvdb::v9_0::math::AffineMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::AffineMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,11): warning C4251: “openvdb::v9_0::math::ScaleMap::mScaleValues”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,25): warning C4251: “openvdb::v9_0::math::ScaleMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,37): warning C4251: “openvdb::v9_0::math::ScaleMap::mScaleValuesInverse”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,58): warning C4251: “openvdb::v9_0::math::ScaleMap::mInvScaleSqr”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(913,72): warning C4251: “openvdb::v9_0::math::ScaleMap::mInvTwiceScale”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1166,11): warning C4251: “openvdb::v9_0::math::TranslationMap::mTranslation”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::TranslationMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,11): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mTranslation”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,25): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mScaleValues”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,39): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mVoxelSize”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1468,51): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mScaleValuesInverse”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1469,9): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mInvScaleSqr”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(1469,23): warning C4251: “openvdb::v9_0::math::ScaleTranslateMap::mInvTwiceScale”: class“openvdb::v9_0::math::Vec3<double>”需要有 dll 接口由 class“openvdb::v9_0::math::ScaleTranslateMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Vec3.h(668): message : 参见“openvdb::v9_0::math::Vec3<double>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Maps.h(2586,13): warning C4251: “openvdb::v9_0::math::NonlinearFrustumMap::mBBox”: class“openvdb::v9_0::math::BBox<openvdb::v9_0::math::Vec3d>”需要有 dll 接口由 class“openvdb::v9_0::math::NonlinearFrustumMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(84): message : 参见“openvdb::v9_0::math::BBox<openvdb::v9_0::math::Vec3d>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\math\Transform.h(157,18): warning C4251: “openvdb::v9_0::math::Transform::mMap”: class“std::shared_ptr<openvdb::v9_0::math::MapBase>”需要有 dll 接口由 class“openvdb::v9_0::math::Transform”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::math::MapBase>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\MetaMap.h(108,17): warning C4251: “openvdb::v9_0::MetaMap::mMeta”: class“std::map<openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr>>>”需要有 dll 接口由 class“openvdb::v9_0::MetaMap”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\MetaMap.h(25): message : 参见“std::map<openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr,std::less<std::string>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Metadata::Ptr>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(93,27): warning C4251: “openvdb::v9_0::io::DelayedLoadMetadata::mMask”: class“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::MaskType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::MaskType>>”需要有 dll 接口由 class“openvdb::v9_0::io::DelayedLoadMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(93): message : 参见“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::MaskType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::MaskType>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(94,37): warning C4251: “openvdb::v9_0::io::DelayedLoadMetadata::mCompressedSize”: class“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType>>”需要有 dll 接口由 class“openvdb::v9_0::io::DelayedLoadMetadata”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\DelayedLoadMetadata.h(94): message : 参见“std::vector<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType,std::allocator<openvdb::v9_0::io::DelayedLoadMetadata::CompressedSizeType>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Grid.h(507,26): warning C4251: “openvdb::v9_0::GridBase::mTransform”: class“std::shared_ptr<openvdb::v9_0::math::Transform>”需要有 dll 接口由 class“openvdb::v9_0::GridBase”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Types.h(114): message : 参见“std::shared_ptr<openvdb::v9_0::math::Transform>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\Grid.h(540,10): warning C4251: “openvdb::v9_0::GridNamePred::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 struct“openvdb::v9_0::GridNamePred”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\Archive.h(181,15): warning C4251: “openvdb::v9_0::io::Archive::mLibraryVersion”: struct“openvdb::v9_0::VersionId”需要有 dll 接口由 class“openvdb::v9_0::io::Archive”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\version.h(288): message : 参见“openvdb::v9_0::VersionId”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(84,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mGridName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(86,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mUniqueName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(88,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mInstanceParentName”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\GridDescriptor.h(90,10): warning C4251: “openvdb::v9_0::io::GridDescriptor::mGridType”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“openvdb::v9_0::io::GridDescriptor”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xstring(4905): message : 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\File.h(209,27): warning C4251: “openvdb::v9_0::io::File::mImpl”: class“std::unique_ptr<openvdb::v9_0::io::File::Impl,std::default_delete<openvdb::v9_0::io::File::Impl>>”需要有 dll 接口由 class“openvdb::v9_0::io::File”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\io\File.h(209): message : 参见“std::unique_ptr<openvdb::v9_0::io::File::Impl,std::default_delete<openvdb::v9_0::io::File::Impl>>”的声明
  TBB Warning: tbb/task.h is deprecated. For details, please see Deprecated Features appendix in the TBB reference manual.
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(159,27): warning C4251: “openvdb::v9_0::compression::Page::mInfo”: class“std::unique_ptr<openvdb::v9_0::compression::Page::Info,std::default_delete<openvdb::v9_0::compression::Page::Info>>”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(159): message : 参见“std::unique_ptr<openvdb::v9_0::compression::Page::Info,std::default_delete<openvdb::v9_0::compression::Page::Info>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(160,29): warning C4251: “openvdb::v9_0::compression::Page::mData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\VolumeToMesh.h(145): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(161,21): warning C4251: “openvdb::v9_0::compression::Page::mMutex”: class“tbb::spin_mutex”需要有 dll 接口由 class“openvdb::v9_0::compression::Page”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(39): message : 参见“tbb::spin_mutex”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(195,15): warning C4251: “openvdb::v9_0::compression::PageHandle::mPage”: class“std::shared_ptr<openvdb::v9_0::compression::Page>”需要有 dll 接口由 class“openvdb::v9_0::compression::PageHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(124): message : 参见“std::shared_ptr<openvdb::v9_0::compression::Page>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(233,15): warning C4251: “openvdb::v9_0::compression::PagedInputStream::mPage”: class“std::shared_ptr<openvdb::v9_0::compression::Page>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedInputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(124): message : 参见“std::shared_ptr<openvdb::v9_0::compression::Page>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(272,29): warning C4251: “openvdb::v9_0::compression::PagedOutputStream::mData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedOutputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\VolumeToMesh.h(145): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\StreamCompression.h(273,29): warning C4251: “openvdb::v9_0::compression::PagedOutputStream::mCompressedData”: class“std::unique_ptr<char [],std::default_delete<char []>>”需要有 dll 接口由 class“openvdb::v9_0::compression::PagedOutputStream”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\tools\VolumeToMesh.h(145): message : 参见“std::unique_ptr<char [],std::default_delete<char []>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(120,38): warning C4251: “openvdb::v9_0::points::AttributeArray::ScopedRegistryLock::lock”: class“tbb::spin_mutex::scoped_lock”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray::ScopedRegistryLock”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(53): message : 参见“tbb::spin_mutex::scoped_lock”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(387,29): warning C4251: “openvdb::v9_0::points::AttributeArray::mMutex”: class“tbb::spin_mutex”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\tbb\spin_mutex.h(39): message : 参见“tbb::spin_mutex”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArray.h(390,26): warning C4251: “openvdb::v9_0::points::AttributeArray::mOutOfCore”: struct“std::atomic<unsigned int>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeArray”的客户端使用
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\atomic(2867): message : 参见“std::atomic<unsigned int>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(80,14): warning C4251: “openvdb::v9_0::points::StringMetaCache::mCache”: class“std::unordered_map<openvdb::v9_0::Name,openvdb::v9_0::Index,std::hash<openvdb::v9_0::Name>,std::equal_to<openvdb::v9_0::Name>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Index>>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringMetaCache”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(60): message : 参见“std::unordered_map<openvdb::v9_0::Name,openvdb::v9_0::Index,std::hash<openvdb::v9_0::Name>,std::equal_to<openvdb::v9_0::Name>,std::allocator<std::pair<const openvdb::v9_0::Name,openvdb::v9_0::Index>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(115,20): warning C4251: “openvdb::v9_0::points::StringMetaInserter::mIdBlocks”: class“std::deque<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>,std::allocator<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringMetaInserter”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(112): message : 参见“std::deque<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>,std::allocator<std::pair<openvdb::v9_0::Index,openvdb::v9_0::Index>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(178,51): warning C4251: “openvdb::v9_0::points::StringAttributeHandle::mHandle”: class“openvdb::v9_0::points::AttributeHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringAttributeHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(178): message : 参见“openvdb::v9_0::points::AttributeHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(235,57): warning C4251: “openvdb::v9_0::points::StringAttributeWriteHandle::mWriteHandle”: class“openvdb::v9_0::points::AttributeWriteHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”需要有 dll 接口由 class“openvdb::v9_0::points::StringAttributeWriteHandle”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeArrayString.h(235): message : 参见“openvdb::v9_0::points::AttributeWriteHandle<openvdb::v9_0::Index,openvdb::v9_0::points::StringCodec<false>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(280,19): warning C4251: “openvdb::v9_0::points::AttributeSet::mDescr”: class“std::shared_ptr<openvdb::v9_0::points::AttributeSet::Descriptor>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(49): message : 参见“std::shared_ptr<openvdb::v9_0::points::AttributeSet::Descriptor>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(281,19): warning C4251: “openvdb::v9_0::points::AttributeSet::mAttrs”: class“std::vector<openvdb::v9_0::points::AttributeArray::Ptr,std::allocator<openvdb::v9_0::points::AttributeArray::Ptr>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(278): message : 参见“std::vector<openvdb::v9_0::points::AttributeArray::Ptr,std::allocator<openvdb::v9_0::points::AttributeArray::Ptr>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(521,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mNameMap”: class“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(66): message : 参见“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(522,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mTypes”: class“std::vector<openvdb::v9_0::NamePair,std::allocator<openvdb::v9_0::NamePair>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(522): message : 参见“std::vector<openvdb::v9_0::NamePair,std::allocator<openvdb::v9_0::NamePair>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(523,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mGroupMap”: class“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(66): message : 参见“std::map<std::string,size_t,std::less<std::string>,std::allocator<std::pair<const std::string,size_t>>>”的声明
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(528,33): warning C4251: “openvdb::v9_0::points::AttributeSet::Descriptor::mFutureContainer”: class“openvdb::v9_0::points::future::Container”需要有 dll 接口由 class“openvdb::v9_0::points::AttributeSet::Descriptor”的客户端使用
D:\VCpkg\vcpkg-master\installed\x64-windows\include\openvdb\points\AttributeSet.h(289): message : 参见“openvdb::v9_0::points::future::Container”的声明
  正在生成代码...
  LINK : 已指定 /LTCG，但不需要生成代码；从链接命令行中移除 /LTCG 以提高链接器性能
  opevdb_viewer.vcxproj -> D:\OpenVDB\opevdb_viewer_AdaptiveRemeshing\x64\Release\opevdb_viewer_AdaptiveRemeshing.exe
